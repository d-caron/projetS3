import networkx as nx
from networkx.algorithms import tournament
import numpy as np
import matplotlib.pyplot as plt
import pylab

G = nx.DiGraph()

G.add_edges_from([6, 4], weight=4)
G.add_edges_from([372, 372], weight=372)
G.add_edges_from([68, 68], weight=4)
G.add_edges_from([4, 7], weight=1218320)
G.add_edges_from([1283856, 1283856], weight=8)
G.add_edges_from([72, 4], weight=4)
G.add_edges_from([1685382481, 0], weight=0)
G.add_edges_from([0, 0], weight=0)
G.add_edges_from([6, 16], weight=1685382482)
G.add_edges_from([1218320, 1283856], weight=1283856)
G.add_edges_from([6, 4], weight=4)
G.add_edges_from([372, 372], weight=372)
G.add_edges_from([68, 68], weight=4)
G.add_edges_from([4, 7], weight=1218320)
G.add_edges_from([1283856, 1283856], weight=8)
G.add_edges_from([72, 4], weight=4)
G.add_edges_from([1685382481, 0], weight=0)
G.add_edges_from([0, 0], weight=0)
G.add_edges_from([6, 16], weight=1685382482)
G.add_edges_from([1218320, 1283856], weight=1283856)
G.add_edges_from([6, 4], weight=4)
G.add_edges_from([372, 372], weight=372)
G.add_edges_from([68, 68], weight=4)
G.add_edges_from([4, 7], weight=1218320)
G.add_edges_from([1283856, 1283856], weight=8)
G.add_edges_from([72, 4], weight=4)
G.add_edges_from([1685382481, 0], weight=0)
G.add_edges_from([0, 0], weight=0)
G.add_edges_from([6, 16], weight=1685382482)
G.add_edges_from([1218320, 1283856], weight=1283856)
G.add_edges_from([6, 4], weight=4)
G.add_edges_from([372, 372], weight=372)
G.add_edges_from([68, 68], weight=4)
G.add_edges_from([4, 7], weight=1218320)
G.add_edges_from([1283856, 1283856], weight=8)
G.add_edges_from([72, 4], weight=4)
G.add_edges_from([1685382481, 0], weight=0)
G.add_edges_from([0, 0], weight=0)
G.add_edges_from([6, 16], weight=1685382482)
G.add_edges_from([1218320, 1283856], weight=1283856)
G.add_edges_from([6, 4], weight=4)
G.add_edges_from([372, 372], weight=372)
G.add_edges_from([68, 68], weight=4)
G.add_edges_from([4, 7], weight=1218320)
G.add_edges_from([1283856, 1283856], weight=8)
G.add_edges_from([72, 4], weight=4)
G.add_edges_from([1685382481, 0], weight=0)
G.add_edges_from([0, 0], weight=0)
G.add_edges_from([6, 16], weight=1685382482)
G.add_edges_from([1218320, 1283856], weight=1283856)
G.add_edges_from([6, 4], weight=4)
G.add_edges_from([372, 372], weight=372)
G.add_edges_from([68, 68], weight=4)
G.add_edges_from([4, 7], weight=1218320)
G.add_edges_from([1283856, 1283856], weight=8)
G.add_edges_from([72, 4], weight=4)
G.add_edges_from([1685382481, 0], weight=0)
G.add_edges_from([0, 0], weight=0)
G.add_edges_from([6, 16], weight=1685382482)
G.add_edges_from([1218320, 1283856], weight=1283856)
G.add_edges_from([6, 4], weight=4)
G.add_edges_from([372, 372], weight=372)
G.add_edges_from([68, 68], weight=4)
G.add_edges_from([4, 7], weight=1218320)
G.add_edges_from([1283856, 1283856], weight=8)
G.add_edges_from([72, 4], weight=4)
G.add_edges_from([1685382481, 0], weight=0)
G.add_edges_from([0, 0], weight=0)
G.add_edges_from([6, 16], weight=1685382482)
G.add_edges_from([1218320, 1283856], weight=1283856)
G.add_edges_from([6, 4], weight=4)
G.add_edges_from([372, 372], weight=372)
G.add_edges_from([68, 68], weight=4)
G.add_edges_from([4, 7], weight=1218320)
G.add_edges_from([1283856, 1283856], weight=8)
G.add_edges_from([72, 4], weight=4)
G.add_edges_from([1685382481, 0], weight=0)
G.add_edges_from([0, 0], weight=0)
G.add_edges_from([6, 16], weight=1685382482)
G.add_edges_from([1218320, 1283856], weight=1283856)
G.add_edges_from([6, 4], weight=4)
G.add_edges_from([372, 372], weight=372)
G.add_edges_from([68, 68], weight=4)
G.add_edges_from([4, 7], weight=1218320)
G.add_edges_from([1283856, 1283856], weight=8)
G.add_edges_from([72, 4], weight=4)
G.add_edges_from([1685382481, 0], weight=0)
G.add_edges_from([0, 0], weight=0)
G.add_edges_from([6, 16], weight=1685382482)
G.add_edges_from([1218320, 1283856], weight=1283856)
G.add_edges_from([6, 4], weight=4)
G.add_edges_from([372, 372], weight=372)
G.add_edges_from([68, 68], weight=4)
G.add_edges_from([4, 7], weight=1218320)
G.add_edges_from([1283856, 1283856], weight=8)
G.add_edges_from([72, 4], weight=4)
G.add_edges_from([1685382481, 0], weight=0)
G.add_edges_from([0, 0], weight=0)
G.add_edges_from([6, 16], weight=1685382482)
G.add_edges_from([1218320, 1283856], weight=1283856)
G.add_edges_from([6, 4], weight=4)
G.add_edges_from([372, 372], weight=372)
G.add_edges_from([68, 68], weight=4)
G.add_edges_from([4, 7], weight=1218320)
G.add_edges_from([1283856, 1283856], weight=8)
G.add_edges_from([72, 4], weight=4)
G.add_edges_from([1685382481, 0], weight=0)
G.add_edges_from([0, 0], weight=0)
G.add_edges_from([6, 16], weight=1685382482)
G.add_edges_from([1218320, 1283856], weight=1283856)
G.add_edges_from([6, 4], weight=4)
G.add_edges_from([372, 372], weight=372)
G.add_edges_from([68, 68], weight=4)
G.add_edges_from([4, 7], weight=1218320)
G.add_edges_from([1283856, 1283856], weight=8)
G.add_edges_from([72, 4], weight=4)
G.add_edges_from([1685382481, 0], weight=0)
G.add_edges_from([0, 0], weight=0)
G.add_edges_from([6, 16], weight=1685382482)
G.add_edges_from([1218320, 1283856], weight=1283856)
G.add_edges_from([6, 4], weight=4)
G.add_edges_from([372, 372], weight=372)
G.add_edges_from([68, 68], weight=4)
G.add_edges_from([4, 7], weight=1218320)
G.add_edges_from([1283856, 1283856], weight=8)
G.add_edges_from([72, 4], weight=4)
G.add_edges_from([1685382481, 0], weight=0)
G.add_edges_from([0, 0], weight=0)
G.add_edges_from([6, 16], weight=1685382482)
G.add_edges_from([1218320, 1283856], weight=1283856)
G.add_edges_from([6, 4], weight=4)
G.add_edges_from([372, 372], weight=372)
G.add_edges_from([68, 68], weight=4)
G.add_edges_from([4, 7], weight=1218320)
G.add_edges_from([1283856, 1283856], weight=8)
G.add_edges_from([72, 4], weight=4)
G.add_edges_from([1685382481, 0], weight=0)
G.add_edges_from([0, 0], weight=0)
G.add_edges_from([6, 16], weight=1685382482)
G.add_edges_from([1218320, 1283856], weight=1283856)
G.add_edges_from([6, 4], weight=4)
G.add_edges_from([372, 372], weight=372)
G.add_edges_from([68, 68], weight=4)
G.add_edges_from([4, 7], weight=1218320)
G.add_edges_from([1283856, 1283856], weight=8)
G.add_edges_from([72, 4], weight=4)
G.add_edges_from([1685382481, 0], weight=0)
G.add_edges_from([0, 0], weight=0)
G.add_edges_from([6, 16], weight=1685382482)
G.add_edges_from([1218320, 1283856], weight=1283856)
G.add_edges_from([6, 4], weight=4)
G.add_edges_from([372, 372], weight=372)
G.add_edges_from([68, 68], weight=4)
G.add_edges_from([4, 7], weight=1218320)
G.add_edges_from([1283856, 1283856], weight=8)
G.add_edges_from([72, 4], weight=4)
G.add_edges_from([1685382481, 0], weight=0)
G.add_edges_from([0, 0], weight=0)
G.add_edges_from([6, 16], weight=1685382482)
G.add_edges_from([1218320, 1283856], weight=1283856)
G.add_edges_from([6, 4], weight=4)
G.add_edges_from([372, 372], weight=372)
G.add_edges_from([68, 68], weight=4)
G.add_edges_from([4, 7], weight=1218320)
G.add_edges_from([1283856, 1283856], weight=8)
G.add_edges_from([72, 4], weight=4)
G.add_edges_from([1685382481, 0], weight=0)
G.add_edges_from([0, 0], weight=0)
G.add_edges_from([6, 16], weight=1685382482)
G.add_edges_from([1218320, 1283856], weight=1283856)
G.add_edges_from([6, 4], weight=4)
G.add_edges_from([372, 372], weight=372)
G.add_edges_from([68, 68], weight=4)
G.add_edges_from([4, 7], weight=1218320)
G.add_edges_from([1283856, 1283856], weight=8)
G.add_edges_from([72, 4], weight=4)
G.add_edges_from([1685382481, 0], weight=0)
G.add_edges_from([0, 0], weight=0)
G.add_edges_from([6, 16], weight=1685382482)
G.add_edges_from([1218320, 1283856], weight=1283856)
G.add_edges_from([6, 4], weight=4)
G.add_edges_from([372, 372], weight=372)
G.add_edges_from([68, 68], weight=4)
G.add_edges_from([4, 7], weight=1218320)
G.add_edges_from([1283856, 1283856], weight=8)
G.add_edges_from([72, 4], weight=4)
G.add_edges_from([1685382481, 0], weight=0)
G.add_edges_from([0, 0], weight=0)
G.add_edges_from([6, 16], weight=1685382482)
G.add_edges_from([1218320, 1283856], weight=1283856)
G.add_edges_from([6, 4], weight=4)
G.add_edges_from([372, 372], weight=372)
G.add_edges_from([68, 68], weight=4)
G.add_edges_from([4, 7], weight=1218320)
G.add_edges_from([1283856, 1283856], weight=8)
G.add_edges_from([72, 4], weight=4)
G.add_edges_from([1685382481, 0], weight=0)
G.add_edges_from([0, 0], weight=0)
G.add_edges_from([6, 16], weight=1685382482)
G.add_edges_from([1218320, 1283856], weight=1283856)
G.add_edges_from([6, 4], weight=4)
G.add_edges_from([372, 372], weight=372)
G.add_edges_from([68, 68], weight=4)
G.add_edges_from([4, 7], weight=1218320)
G.add_edges_from([1283856, 1283856], weight=8)
G.add_edges_from([72, 4], weight=4)
G.add_edges_from([1685382481, 0], weight=0)
G.add_edges_from([0, 0], weight=0)
G.add_edges_from([6, 16], weight=1685382482)
G.add_edges_from([1218320, 1283856], weight=1283856)


print(tournament.is_tournament(G))

edge_labels=dict([((u,v,),d['weight'])
                 for u,v,d in G.edges(data=True)])

pos=nx.circular_layout(G)

nx.draw_networkx_edge_labels(G,pos,edge_labels=edge_labels)
nx.draw_networkx(G,pos, node_size=200)
pylab.show()
