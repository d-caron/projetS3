##
# Ceci est du commentaire pour comprendre la création d'un Makefile
# Enlève tout le commentaire (sauf celui que tu juge utile) pour ton Makefile
# Attention les yeux, c'est parti !
# PS : C'est un peu long, mais lis bien les commentaires, tu devrait comprendre. (j'espère)
##




#############################
# Les lignes qui suivent permettent de créer la commande de compilation. Je te conseille de ne pas y toucher.
##
CC = cc			
# Variable contenant la commande de compilation (cc pour compiler un fichier c)

CFLAGS =-Wall -g	
# Variable contenant les parametres de compilation 
# Ici :
# 	-Wall affiche les erreurs non bloquantes pour la compilation (les warnings)
#		-g permet de créer un exécutable debbogable avec gdb (debbogeur c)


#############################
#	La liste de tes exécutables (Tu doit mettre tout les exécutables que tu veux créer par exemple ton main et ton fichier de test
# Met un antislash comme ci dessous pour retourner à la ligne lorsque tu en à plusieurs
##
EXECS = \
	main \
	test


#############################
# Ne pas toucher ! (Indique dans quelle variable est rangé la liste des exécutables que tu veux créer. Ici, on les a stocké juste avant dans EXECS)
##
all : $(EXECS)


#############################
# Ne pas toucher ! (Indique ce qui doit être supprimé lorsque l'on veux tout recompiler depuis le début. Ici, les exécutables déjà présent et les fichiers .o)
##
clean:
	rm -rf $(EXECS) *.o


#############################
#	Pour chaques exécutables, on lui indique quels fichiers objets (.o) il doit utiliser 
# (ça correspond au fichier .c correspondant à l'exécutable avec l'extension .o  et aux fichiers .h que l'on à inclus dedans mais avec l'extension .o)
##
##
# Par exemple si dans main.c, on à :
# #include "inclusion1.h"
# #include "inclusion2.h"
#
# ...
##
main: main.o inclusion1.o inclusion2.o
	$(CC) -o $@ $^ $(CFLAGS)	# Ne pas toucher ! (correspond à la commande compiler le fichier main)
	
##
# Par exemple si dans test.c, on à :
# #include "inclusion1.h"
# #include "inclusion2.h"
# #include "inclusion3.h"
#
# ...
##
test: test.o inclusion1.o inclusion2.o inclusion3.o
	$(CC) -o $@ $^ $(CFLAGS) #Ne pas toucher ! (correspond à la commande qui va compiler le fichier test)


#############################
# Pour chaques .o crée précédement, il va falloir lui indiquer le .h qui lui correspond (sauf main.o et test.o puisqu'ils sont issu d'un .c)
##
inclusion1.o: inclusion1.h
inclusion2.o: inclusion2.h
inclusion3.o: inclusion3.h


#############################
# Ne pas toucher ! (Cette ligne indique pour chaques .o crée précédement le .c correspondant)
##
%.o: %.c
	$(CC) -c $< -o $@ $(CFLAGS)	# Ne pas toucher ! (Correspond à la commande qui va créer tout les .o nécessaire)




##
#	Tu peux avec ce format ajouter de nouveaux fichier de code et les ajouter facilement à ton Makefile
# C'est pas la façon universelle de faire des Makefile mais c'est plutot propre et inspiré de ceux que les profs nous ont donnés.
# J'espère que c'est clair et que tu arrivera à l'utiliser. ;)
##
